// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCCLions.Infrastructure.Data;

#nullable disable

namespace TccLions.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDataContext))]
    [Migration("20241107170246_AddedDespesaTable")]
    partial class AddedDespesaTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MembroPermissao", b =>
                {
                    b.Property<Guid>("MembroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissoesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MembroId", "PermissoesId");

                    b.HasIndex("PermissoesId");

                    b.ToTable("MembroPermissoes", (string)null);
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Ata", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEscrita")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Atas");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Comissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_membroId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MembroId");

                    b.Property<Guid>("_tipoComissaoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TipoComissaoId");

                    b.HasKey("Id");

                    b.HasIndex("_membroId");

                    b.HasIndex("_tipoComissaoId");

                    b.ToTable("Comissoes");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Despesa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DataRegistro")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<Guid?>("MembroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<Guid>("_tipoDeDespesaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TipoDeDespesaId");

                    b.HasKey("Id");

                    b.HasIndex("MembroId");

                    b.HasIndex("_tipoDeDespesaId");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("MembroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembroId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadosCivis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Solteiro"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Casado"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Separado"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Divorciado"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Viuvo"
                        });
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Membro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EstadoCivil");

                    b.ToTable("Membros");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Permissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Permissoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c60c946-51e8-4e71-9b00-2666bc360d15"),
                            Nome = "Admin"
                        });
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.TipoComissao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoComissoes");
                });

            modelBuilder.Entity("TccLions.Domain.Data.Models.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataVenda")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeEvento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("QuantidadeVenda")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<double>("ValorTotal")
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("TccLions.Domain.Data.Models.TipoDespesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TipoDespesas");
                });

            modelBuilder.Entity("MembroPermissao", b =>
                {
                    b.HasOne("TCCLions.Domain.Data.Models.Membro", null)
                        .WithMany()
                        .HasForeignKey("MembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCCLions.Domain.Data.Models.Permissao", null)
                        .WithMany()
                        .HasForeignKey("PermissoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Comissao", b =>
                {
                    b.HasOne("TCCLions.Domain.Data.Models.Membro", "Membro")
                        .WithMany()
                        .HasForeignKey("_membroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCCLions.Domain.Data.Models.TipoComissao", "TipoComissao")
                        .WithMany()
                        .HasForeignKey("_tipoComissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membro");

                    b.Navigation("TipoComissao");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Despesa", b =>
                {
                    b.HasOne("TCCLions.Domain.Data.Models.Membro", "Membro")
                        .WithMany()
                        .HasForeignKey("MembroId");

                    b.HasOne("TccLions.Domain.Data.Models.TipoDespesa", "TipoDeDespesa")
                        .WithMany()
                        .HasForeignKey("_tipoDeDespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membro");

                    b.Navigation("TipoDeDespesa");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Endereco", b =>
                {
                    b.HasOne("TCCLions.Domain.Data.Models.Membro", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("MembroId");
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Membro", b =>
                {
                    b.HasOne("TCCLions.Domain.Data.Models.EstadoCivil", null)
                        .WithMany()
                        .HasForeignKey("EstadoCivil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TCCLions.Domain.Data.Models.Membro", b =>
                {
                    b.Navigation("Enderecos");
                });
#pragma warning restore 612, 618
        }
    }
}
